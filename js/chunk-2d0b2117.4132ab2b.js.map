{"version":3,"sources":["webpack:///./src/views/Components.vue?5f52","webpack:///src/views/Components.vue","webpack:///./src/views/Components.vue?0ad8","webpack:///./src/views/Components.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_m","_v","on","$event","handleModalClick","isLoading","simulateLoading","staticStyle","attrs","emptyStateLoading","key","emptyStateData","_l","faq","question","slot","_s","answer","modalOpen","handleModalClose","modalTitle","class","modalTagClass","modalMessage","modalButtonClass","_e","staticRenderFns","name","data","methods","component","action","title","msg","tagClass"],"mappings":"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","file":"js/chunk-2d0b2117.4132ab2b.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container is-fluid\"},[_c('breadcrumb'),_c('section',{staticClass:\"section\"},[_c('div',{staticClass:\"columns is-multiline\"},[_c('div',{staticClass:\"column is-full\"},[_c('div',{staticClass:\"card\"},[_vm._m(0),_c('div',{staticClass:\"card-content\"},[_c('p',[_vm._v(\" How many times in your project have you written modal dialog? In my experience, way too many times, and thats what components are meant to replace. to give you reusable thing. In this case, all modals are probably going to have a similar structure in a project. Therefore it makes absolute sense to make a reusable modal that will allow other developers to focus on writing new areas and not re-writing the same modal over and over again. \")]),_c('div',{staticClass:\"buttons\"},[_c('button',{staticClass:\"button is-primary\",on:{\"click\":function($event){return _vm.handleModalClick('Primary', 'Primary message', 'is-primary')}}},[_vm._v(\" Open Main Modal \")]),_c('button',{staticClass:\"button is-danger\",on:{\"click\":function($event){return _vm.handleModalClick(\n                    'Danger',\n                    'DANGER WILL ROBINSON',\n                    'is-danger'\n                  )}}},[_vm._v(\" Open Danger Modal \")]),_c('button',{staticClass:\"button is-warning\",on:{\"click\":function($event){return _vm.handleModalClick('Warning', 'Warning Message', 'is-warning')}}},[_vm._v(\" Open Warning Modal \")]),_c('button',{staticClass:\"button is-info\",on:{\"click\":function($event){return _vm.handleModalClick('Info', 'Info Message', 'is-info')}}},[_vm._v(\" Open Info Modal \")])])])])]),_c('div',{staticClass:\"column is-full\"},[_c('div',{staticClass:\"card\"},[_vm._m(1),_c('div',{staticClass:\"card-content\"},[(_vm.isLoading == true)?_c('button',{staticClass:\"button is-primary mb-3\",on:{\"click\":function($event){return _vm.simulateLoading('loading', false)}}},[_vm._v(\" Simulate Loading Done \")]):_c('button',{staticClass:\"button is-primary mb-3\",on:{\"click\":function($event){return _vm.simulateLoading('loading', true)}}},[_vm._v(\" Simulate Loading Start \")]),_c('div',{staticClass:\"is-relative\",staticStyle:{\"height\":\"250px\"}},[_c('p',[_vm._v(\" This is a reuseable wrapper for buefy's b-loading component that gives you more uniform control over it. This uses bulma, fontawesome and buefy. \")]),_c('loading-state',{attrs:{\"isLoading\":_vm.isLoading,\"isFullPage\":false}})],1)])])]),_c('div',{staticClass:\"column is-full\"},[_c('div',{staticClass:\"card\"},[_vm._m(2),_c('div',{staticClass:\"card-content\"},[_c('p',[_vm._v(\" This component takes in data and a searchQuery. data can come from whatever, searchQuery variable is up to you. This does use font awesome for icons. But you should too. \")]),_c('div',{staticClass:\"content\"},[_c('p',[_vm._v(\"Empty State Default with no data\")]),(_vm.emptyStateLoading == true)?_c('button',{staticClass:\"button is-primary mb-3\",on:{\"click\":function($event){return _vm.simulateLoading('empty', false)}}},[_vm._v(\" Simulate Loading Done \")]):_c('button',{staticClass:\"button is-primary mb-3\",on:{\"click\":function($event){return _vm.simulateLoading('empty', true)}}},[_vm._v(\" Simulate Loading Start \")]),_c('empty-state',{key:\"emptyStateWithoutData\",attrs:{\"data\":_vm.emptyStateData,\"isLoading\":_vm.emptyStateLoading}})],1)])])]),_c('div',{staticClass:\"column is-full\"},[_c('div',{staticClass:\"card\"},[_vm._m(3),_c('div',{staticClass:\"card-content\"},[_c('p',[_vm._v(\" I created a breadcrumb component that would use values off vue-router to show information (and fontawesome icons, with a back button using router history). The idea being uniformity and clarity, additionally this method lets you focus on the values from the router. This component is currently used on this site. This can take in a :currentPage property as well, in case you want to use your breadcrumbs as a unifom path and have the page they are on be the current page (perhaps you have a complex tree structure on your site \")]),_c('breadcrumb',{attrs:{\"currentPage\":'Blog #1345 Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb'}})],1)])]),_c('div',{staticClass:\"column is-full\"},[_c('div',{staticClass:\"card\"},[_vm._m(4),_c('div',{staticClass:\"card-content\"},[_c('p',[_vm._v(\" I've created some accordions, because of course i did lol. \")]),_c('section',{staticClass:\"hero\"},[_c('div',{staticClass:\"hero-body\"},[_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"columns\"},[_c('div',{staticClass:\"column is-full\"},[_c('p',{staticClass:\"title is-size-6 has-text-black\"},[_vm._v(\" Frequently Asked Questions \")]),_vm._l((_vm.faq),function(faq){return _c('accordion',{key:faq.question},[_c('div',{attrs:{\"slot\":\"header\"},slot:\"header\"},[_vm._v(_vm._s(faq.question))]),_vm._v(\" \"+_vm._s(faq.answer)+\" \")])})],2)])])])])])])])])]),(_vm.modalOpen)?_c('dynamic-modal',{attrs:{\"open\":_vm.modalOpen},on:{\"close\":_vm.handleModalClose}},[_c('template',{slot:\"modal-title\"},[_vm._v(_vm._s(_vm.modalTitle)+\" Modal\")]),_c('template',{slot:\"modal-body\"},[_c('span',{class:'tag is-round ' + _vm.modalTagClass},[_vm._v(\" \"+_vm._s(_vm.modalMessage)+\" \")])]),_c('template',{slot:\"modal-footer-buttons\"},[_c('p',{staticClass:\"control\"},[_c('button',{staticClass:\"button\",class:_vm.modalButtonClass,on:{\"click\":_vm.handleModalClose}},[_vm._v(\" Call to action \")])])])],2):_vm._e()],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('header',{staticClass:\"card-header\"},[_c('p',{staticClass:\"card-header-title\"},[_vm._v(\"Dynamic Modal (Bulma)\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('header',{staticClass:\"card-header\"},[_c('p',{staticClass:\"card-header-title\"},[_vm._v(\" Loading State (Bulma, buefy and fontawesome) \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('header',{staticClass:\"card-header\"},[_c('p',{staticClass:\"card-header-title\"},[_vm._v(\" Empty State + Loading State component (bulma and buefy with fontawesome) \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('header',{staticClass:\"card-header\"},[_c('p',{staticClass:\"card-header-title\"},[_vm._v(\" Breadcrumb (Bulma and fontawesome) \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('header',{staticClass:\"card-header\"},[_c('p',{staticClass:\"card-header-title\"},[_vm._v(\"Accordion (fontawesome)\")])])}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"container is-fluid\">\r\n    <breadcrumb />\r\n    <section class=\"section\">\r\n      <div class=\"columns is-multiline\">\r\n        <div class=\"column is-full\">\r\n          <div class=\"card\">\r\n            <header class=\"card-header\">\r\n              <p class=\"card-header-title\">Dynamic Modal (Bulma)</p>\r\n            </header>\r\n            <div class=\"card-content\">\r\n              <p>\r\n                How many times in your project have you written modal dialog? In\r\n                my experience, way too many times, and thats what components are\r\n                meant to replace. to give you reusable thing. In this case, all\r\n                modals are probably going to have a similar structure in a\r\n                project. Therefore it makes absolute sense to make a reusable\r\n                modal that will allow other developers to focus on writing new\r\n                areas and not re-writing the same modal over and over again.\r\n              </p>\r\n              <div class=\"buttons\">\r\n                <button\r\n                  class=\"button is-primary\"\r\n                  @click=\"\r\n                    handleModalClick('Primary', 'Primary message', 'is-primary')\r\n                  \"\r\n                >\r\n                  Open Main Modal\r\n                </button>\r\n\r\n                <button\r\n                  class=\"button is-danger\"\r\n                  @click=\"\r\n                    handleModalClick(\r\n                      'Danger',\r\n                      'DANGER WILL ROBINSON',\r\n                      'is-danger'\r\n                    )\r\n                  \"\r\n                >\r\n                  Open Danger Modal\r\n                </button>\r\n                <button\r\n                  class=\"button is-warning\"\r\n                  @click=\"\r\n                    handleModalClick('Warning', 'Warning Message', 'is-warning')\r\n                  \"\r\n                >\r\n                  Open Warning Modal\r\n                </button>\r\n                <button\r\n                  class=\"button is-info\"\r\n                  @click=\"handleModalClick('Info', 'Info Message', 'is-info')\"\r\n                >\r\n                  Open Info Modal\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"column is-full\">\r\n          <div class=\"card\">\r\n            <header class=\"card-header\">\r\n              <p class=\"card-header-title\">\r\n                Loading State (Bulma, buefy and fontawesome)\r\n              </p>\r\n            </header>\r\n            <div class=\"card-content\">\r\n              <button\r\n                v-if=\"isLoading == true\"\r\n                class=\"button is-primary mb-3\"\r\n                @click=\"simulateLoading('loading', false)\"\r\n              >\r\n                Simulate Loading Done\r\n              </button>\r\n              <button\r\n                v-else\r\n                class=\"button is-primary mb-3\"\r\n                @click=\"simulateLoading('loading', true)\"\r\n              >\r\n                Simulate Loading Start\r\n              </button>\r\n              <div class=\"is-relative\" style=\"height: 250px\">\r\n                <p>\r\n                  This is a reuseable wrapper for buefy's b-loading component\r\n                  that gives you more uniform control over it. This uses bulma,\r\n                  fontawesome and buefy.\r\n                </p>\r\n                <loading-state :isLoading=\"isLoading\" :isFullPage=\"false\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"column is-full\">\r\n          <div class=\"card\">\r\n            <header class=\"card-header\">\r\n              <p class=\"card-header-title\">\r\n                Empty State + Loading State component (bulma and buefy with\r\n                fontawesome)\r\n              </p>\r\n            </header>\r\n            <div class=\"card-content\">\r\n              <p>\r\n                This component takes in data and a searchQuery. data can come\r\n                from whatever, searchQuery variable is up to you. This does use\r\n                font awesome for icons. But you should too.\r\n              </p>\r\n              <div class=\"content\">\r\n                <p>Empty State Default with no data</p>\r\n                <button\r\n                  v-if=\"emptyStateLoading == true\"\r\n                  class=\"button is-primary mb-3\"\r\n                  @click=\"simulateLoading('empty', false)\"\r\n                >\r\n                  Simulate Loading Done\r\n                </button>\r\n                <button\r\n                  v-else\r\n                  class=\"button is-primary mb-3\"\r\n                  @click=\"simulateLoading('empty', true)\"\r\n                >\r\n                  Simulate Loading Start\r\n                </button>\r\n                <empty-state\r\n                  :data=\"emptyStateData\"\r\n                  :isLoading=\"emptyStateLoading\"\r\n                  key=\"emptyStateWithoutData\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"column is-full\">\r\n          <div class=\"card\">\r\n            <header class=\"card-header\">\r\n              <p class=\"card-header-title\">\r\n                Breadcrumb (Bulma and fontawesome)\r\n              </p>\r\n            </header>\r\n            <div class=\"card-content\">\r\n              <p>\r\n                I created a breadcrumb component that would use values off\r\n                vue-router to show information (and fontawesome icons, with a\r\n                back button using router history). The idea being uniformity and\r\n                clarity, additionally this method lets you focus on the values\r\n                from the router. This component is currently used on this site.\r\n                This can take in a :currentPage property as well, in case you\r\n                want to use your breadcrumbs as a unifom path and have the page\r\n                they are on be the current page (perhaps you have a complex tree\r\n                structure on your site\r\n              </p>\r\n              <breadcrumb\r\n                :currentPage=\"\r\n                  'Blog #1345 Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb'\r\n                \"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"column is-full\">\r\n          <div class=\"card\">\r\n            <header class=\"card-header\">\r\n              <p class=\"card-header-title\">Accordion (fontawesome)</p>\r\n            </header>\r\n            <div class=\"card-content\">\r\n              <p>\r\n                I've created some accordions, because of course i did lol.\r\n              </p>\r\n              <section class=\"hero\">\r\n                <div class=\"hero-body\">\r\n                  <div class=\"container\">\r\n                    <div class=\"columns\">\r\n                      <div class=\"column is-full\">\r\n                        <p class=\"title is-size-6 has-text-black\">\r\n                          Frequently Asked Questions\r\n                        </p>\r\n                        <accordion v-for=\"faq in faq\" v-bind:key=\"faq.question\">\r\n                          <div slot=\"header\">{{ faq.question }}</div>\r\n                          {{ faq.answer }}\r\n                        </accordion>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </section>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <dynamic-modal :open=\"modalOpen\" @close=\"handleModalClose\" v-if=\"modalOpen\">\r\n      <template slot=\"modal-title\">{{ modalTitle }} Modal</template>\r\n      <template slot=\"modal-body\">\r\n        <span :class=\"'tag is-round ' + modalTagClass\">\r\n          {{ modalMessage }}\r\n        </span>\r\n      </template>\r\n      <template slot=\"modal-footer-buttons\">\r\n        <p class=\"control\">\r\n          <button\r\n            class=\"button\"\r\n            :class=\"modalButtonClass\"\r\n            @click=\"handleModalClose\"\r\n          >\r\n            Call to action\r\n          </button>\r\n        </p>\r\n      </template>\r\n    </dynamic-modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'components',\r\n  data() {\r\n    return {\r\n      modalOpen: false,\r\n      modalMessage: '',\r\n      modalTagClass: 'is-primary',\r\n      modalButtonClass: 'is-primary',\r\n      modalTitle: '',\r\n      emptyStateData: [],\r\n      emptyStateLoading: true,\r\n      isLoading: true,\r\n      faq: [\r\n        {\r\n          question: 'What is the airspeed velocity of an unladen swallow?',\r\n          answer: 'what do you mean, african or european?'\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  methods: {\r\n    simulateLoading(component, action) {\r\n      if (component == 'empty') {\r\n        this.emptyStateLoading = action\r\n      } else {\r\n        this.isLoading = action\r\n      }\r\n    },\r\n    handleModalClick(title, msg, tagClass) {\r\n      this.modalOpen = true\r\n      this.modalTitle = title\r\n      this.modalMessage = msg\r\n      this.modalTagClass = tagClass\r\n      this.modalButtonClass = tagClass\r\n    },\r\n    handleModalClose() {\r\n      this.modalOpen = false\r\n      this.modalTitle = ''\r\n      this.modalMessage = ''\r\n      this.modalTagClass = 'is-primary'\r\n      this.modalButtonClass = 'is-primary'\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Components.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Components.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Components.vue?vue&type=template&id=9bdfe978&scoped=true&\"\nimport script from \"./Components.vue?vue&type=script&lang=js&\"\nexport * from \"./Components.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"9bdfe978\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}